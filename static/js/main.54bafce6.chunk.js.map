{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Status/index.js","App.js","index.js"],"names":["ImageCard","props","className","value","id","onCLick","handleClick","alt","name","src","image","Wrapper","children","Title","score","highscore","Status","rightWrong","App","state","cards","clicked","shuffleArray","array","i","length","j","Math","floor","random","x","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledCards","this","map","card","key","Component","ReactDOM","render","document","getElementById"],"mappings":"w8BAaeA,MAVf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,iBAAiBC,MAAOF,EAAMG,GAAIC,QAAS,kBAAMJ,EAAMK,YAAYL,EAAMG,MACtF,yBAAKF,UAAU,iBACb,yBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,W,MCA1BC,MAJf,SAAiBV,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMW,W,MCW1BC,MAZf,SAAeZ,GACb,OACE,yBAAKC,UAAU,UACX,yBAAKA,UAAU,SAASD,EAAMW,UAC9B,yBAAKV,UAAU,UAAf,UACQD,EAAMa,MADd,eACiCb,EAAMc,WAEvC,yBAAKb,UAAU,gBAAf,8E,MCHOc,MAJf,SAAgBf,GACd,OAAO,yBAAKC,UAAU,UAAUD,EAAMgB,a,OCoFzBC,E,2MAhFbC,MAAQ,CACNC,QACAN,MAAO,EACPC,UAAW,EACXE,WAAY,GACZI,QAAQ,I,EAGVC,aAAe,SAAAC,GACb,IAAK,IAAIC,EAAED,EAAME,OAAQ,EAAGD,EAAI,EAAGA,IAAK,CACtC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAE,IAClCM,EAAIP,EAAMC,GACdD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,G,EAGTjB,YAAc,SAAAF,IAC4B,IAApC,EAAKe,MAAME,QAAQU,QAAQ3B,IAC7B,EAAK4B,kBACL,EAAKC,SAAS,CAAEZ,QAAS,EAAKF,MAAME,QAAQa,OAAO9B,MAEnD,EAAK+B,e,EAITH,gBAAkB,WAChB,IAAMI,EAAW,EAAKjB,MAAML,MAAQ,EACpC,EAAKmB,SAAS,CACZnB,MAAOsB,EACPnB,WAAY,KAEVmB,GAAY,EAAKjB,MAAMJ,UACzB,EAAKkB,SAAS,CAAElB,UAAWqB,IAEP,KAAbA,GACP,EAAKH,SAAS,CAAEhB,WAAY,aAE9B,EAAKoB,iB,EAGPF,YAAc,WACZ,EAAKF,SAAS,CACZnB,MAAO,EACPC,UAAW,EAAKI,MAAMJ,UACtBE,WAAY,YACZI,QAAS,KAEX,EAAKgB,iB,EAGPA,cAAgB,WACd,IAAIC,EAAgB,EAAKhB,aAAaF,GACtC,EAAKa,SAAS,CAAEb,MAAOkB,K,wEAGf,IAAD,OACP,OACE,6BACA,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAOxB,MAAOyB,KAAKpB,MAAML,MAAOC,UAAWwB,KAAKpB,MAAMJ,WAAtD,gBACA,kBAAC,EAAD,MACGwB,KAAKpB,MAAMC,MAAMoB,KAAI,SAAAC,GAAI,OACxB,kBAAC,EAAD,CACErC,GAAIqC,EAAKrC,GACTsC,IAAKD,EAAKrC,GACVM,MAAO+B,EAAK/B,MACZJ,YAAa,EAAKA,YAClB0B,gBAAiB,EAAKA,gBACtBG,YAAa,EAAKA,YAClBE,cAAe,EAAKA,yB,GAxEdM,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.54bafce6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <div className=\"card container\" value={props.id} onCLick={() => props.handleClick(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"header\">\r\n        <div className=\"title\">{props.children}</div>\r\n        <div className=\"scores\">\r\n        Score: {props.score} Highscore: {props.highscore}\r\n        </div>\r\n        <div className=\"instructions\">Click on an image to earn points, but don't click on any more than once!</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Status(props) {\r\n  return <div className=\"status\">{props.rightWrong}</div>;\r\n}\r\n\r\nexport default Status;\r\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Status from \"./components/Status\";\nimport cards from \"./cards.json\"\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highscore: 0,\n    rightWrong: \"\",\n    clicked:[]\n  };\n\n  shuffleArray = array => {\n    for (var i=array.length -1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i+1));\n      var x = array[i];\n      array[i] = array[j];\n      array[j] = x\n    }\n    return array;\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n      rightWrong: \"\"\n    });\n    if (newScore >= this.state.highscore) {\n      this.setState({ highscore: newScore });\n    }\n    else if (newScore === 12) {\n      this.setState({ rightWrong: \"You win!\" });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      score: 0,\n      highscore: this.state.highscore,\n      rightWrong: \"You lose!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledCards = this.shuffleArray(cards);\n    this.setState({ cards: shuffledCards });\n  };\n\n  render() {\n    return (\n      <div>\n      <Wrapper>\n      <Title score={this.state.score} highscore={this.state.highscore}>Clicky Game!</Title>\n      <Status />\n        {this.state.cards.map(card => (\n          <ImageCard \n            id={card.id}\n            key={card.id}\n            image={card.image}\n            handleClick={this.handleClick}\n            handleIncrement={this.handleIncrement}\n            handleReset={this.handleReset}\n            handleShuffle={this.handleShuffle}\n          />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}