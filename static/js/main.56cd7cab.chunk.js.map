{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["ImageCard","props","className","value","id","onClick","handleClick","alt","name","src","image","Wrapper","children","Title","score","highscore","rightWrong","App","state","cards","clicked","shuffleArray","array","i","length","j","Math","floor","random","x","indexOf","handleIncrement","setState","concat","handleShuffle","handleReset","newScore","shuffledCards","this","map","card","key","Component","ReactDOM","render","document","getElementById"],"mappings":"w8BAaeA,MAVf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,iBAAiBC,MAAOF,EAAMG,GAAIC,QAAS,kBAAMJ,EAAMK,YAAYL,EAAMG,MACtF,yBAAKF,UAAU,iBACb,yBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,W,MCA1BC,MAJf,SAAiBV,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMW,W,MCW1BC,MAZf,SAAeZ,GACb,OACE,yBAAKC,UAAU,UACX,yBAAKA,UAAU,SAASD,EAAMW,UAC9B,yBAAKV,UAAU,UAAf,UACQD,EAAMa,MADd,eACiCb,EAAMc,WAEvC,yBAAKb,UAAU,gBAAgBD,EAAMe,c,OC8E9BC,G,iNAhFbC,MAAQ,CACNC,QACAL,MAAO,EACPC,UAAW,EACXC,WAAY,4EACZI,QAAQ,I,EAGVC,aAAe,SAAAC,GACb,IAAK,IAAIC,EAAED,EAAME,OAAQ,EAAGD,EAAI,EAAGA,IAAK,CACtC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAE,IAClCM,EAAIP,EAAMC,GACdD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,G,EAGThB,YAAc,SAAAF,IAC4B,IAApC,EAAKc,MAAME,QAAQU,QAAQ1B,IAC7B,EAAK2B,kBACL,EAAKC,SAAS,CAAEZ,QAAS,EAAKF,MAAME,QAAQa,OAAO7B,KACnD,EAAK8B,iBAEL,EAAKC,e,EAITJ,gBAAkB,WAChB,IAAMK,EAAW,EAAKlB,MAAMJ,MAAQ,EACpC,EAAKkB,SAAS,CACZlB,MAAOsB,EACPpB,WAAY,8EAEVoB,GAAY,EAAKlB,MAAMH,YACzB,EAAKiB,SAAS,CAAEjB,UAAWqB,IACV,KAAbA,GACF,EAAKJ,SAAS,CAAEhB,WAAY,cAGhC,EAAKkB,iB,EAGPC,YAAc,WACZ,EAAKH,SAAS,CACZlB,MAAO,EACPC,UAAW,EAAKG,MAAMH,UACtBC,WAAY,aACZI,QAAS,KAEX,EAAKc,iB,EAGPA,cAAgB,WACd,IAAIG,EAAgB,EAAKhB,aAAaF,GACtC,EAAKa,SAAS,CAAEb,MAAOkB,K,wEAGf,IAAD,OACP,OACE,yBAAKnC,UAAU,WACb,kBAAC,EAAD,CAAOY,MAAOwB,KAAKpB,MAAMJ,MAAOC,UAAWuB,KAAKpB,MAAMH,UAAWC,WAAYsB,KAAKpB,MAAMF,YAAxF,gBACA,kBAAC,EAAD,KACGsB,KAAKpB,MAAMC,MAAMoB,KAAI,SAAAC,GAAI,OACxB,kBAAC,EAAD,CACEpC,GAAIoC,EAAKpC,GACTqC,IAAKD,EAAKpC,GACVM,MAAO8B,EAAK9B,MACZJ,YAAa,EAAKA,YAClByB,gBAAiB,EAAKA,gBACtBI,YAAa,EAAKA,YAClBD,cAAe,EAAKA,yB,GAxEhBQ,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.56cd7cab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <div className=\"card container\" value={props.id} onClick={() => props.handleClick(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"header\">\r\n        <div className=\"title\">{props.children}</div>\r\n        <div className=\"scores\">\r\n        Score: {props.score} Highscore: {props.highscore}\r\n        </div>\r\n        <div className=\"instructions\">{props.rightWrong}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cards from \"./cards.json\";\nimport \"./style.css\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highscore: 0,\n    rightWrong: \"Click on an image to earn points, but don't click on them more than once!\",\n    clicked:[]\n  };\n\n  shuffleArray = array => {\n    for (var i=array.length -1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i+1));\n      var x = array[i];\n      array[i] = array[j];\n      array[j] = x\n    }\n    return array;\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n      this.handleShuffle();\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n      rightWrong: \"Click on an image to earn points, but don't click on them more than once!\"\n    });\n    if (newScore >= this.state.highscore) {\n      this.setState({ highscore: newScore });\n      if (newScore === 12) {\n        this.setState({ rightWrong: \"You win!\" });\n      }\n    }    \n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      score: 0,\n      highscore: this.state.highscore,\n      rightWrong: \"Try Again!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledCards = this.shuffleArray(cards);\n    this.setState({ cards: shuffledCards });\n  };\n\n  render() {\n    return (\n      <div className=\"backapp\">\n        <Title score={this.state.score} highscore={this.state.highscore} rightWrong={this.state.rightWrong}>Clicky Game!</Title>\n        <Wrapper>\n          {this.state.cards.map(card => (\n            <ImageCard \n              id={card.id}\n              key={card.id}\n              image={card.image}\n              handleClick={this.handleClick}\n              handleIncrement={this.handleIncrement}\n              handleReset={this.handleReset}\n              handleShuffle={this.handleShuffle}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}